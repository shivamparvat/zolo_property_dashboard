import * as yup from 'yup';

const validationSchema = yup.object().shape({
  state: yup.string().required(),
  city: yup.string().required(),
  zip_code: yup.number().required(),
  address: yup.string(),
  status: yup.number().oneOf([1, 2, 3]),
  show_verified: yup.boolean(),
  property_for: yup.string().oneOf(['sell', 'rent', 'sold']).required(),
  location: yup.string().required(),
  property_type: yup.string().oneOf([
    'Shop',
    'Plot',
    'Office',
    'Apartments',
    'House',
    'Villa',
    'Hostel',
    'Pg',
    'Farm'
  ]).default('House'),
  saleable_area: yup.string(),
  carpet_area: yup.string(),
  saleable_area_size_in: yup.string().oneOf(['Feet', 'Meters', 'Yards', 'Bigha', 'Acres', 'Hectares']).default('Feet'),
  carpet_area_size_in: yup.string().oneOf(['Feet', 'Meters', 'Yards']).default('Feet'),
  additional_room: yup.array().of(yup.string()).default([]),
  expected_price: yup.number().default(0),
  expected_price_in_sqft: yup.number().default(0),
  negotiable: yup.boolean().default(true),
  booking_price: yup.number().default(0),
  monthly_rent: yup.number().default(0),
  security_deposit: yup.string().default('0'),
  property_description: yup.string(),
  open_side: yup.string().oneOf(['0', '1', '2', '3', '4']).default('0'),
  facing_road_width: yup.string(),
  facing_road_width_in: yup.string().oneOf(['Feet', 'Meters']).default('Feet'),
  images: yup.array().of(yup.string()).default([]),
  video: yup.string(),
  room_data: yup.array().of(
    yup.object({
      room_type: yup.string(),
      no_of_rooms: yup.number(),
      price: yup.string()
    })
  ).default([]),
  bedrooms: yup.string(),
  bathrooms: yup.number(),
  balconies: yup.number(),
  additional_facility: yup.array().of(yup.string()).default([]),
  property_status: yup.string().oneOf(['Ready_to_shift', 'Underconstruction']).default('Ready_to_shift'),
  property_age: yup.string(),
  possession_date: yup.date(),
  description: yup.string(),
  furnishing_status: yup.string().oneOf(['Unfurnished', 'Semi_furnished', 'Fully_furnished']),
  wardrobe: yup.number(),
  beds: yup.number(),
  ac: yup.number(),
  tv: yup.number(),
  light: yup.string(),
  fan: yup.string(),
  exhaust_fan: yup.string(),
  boundary_wall: yup.string(),
  additional_furnishing: yup.array().of(yup.string()).default([]),
  other_facility: yup.string(),
  car_parking_open: yup.number(),
  car_parking_close: yup.number(),
  floor: yup.number(),
  total_floor: yup.number(),
  overlooking: yup.array().of(yup.string()).default([]),
  ownership_type: yup.string().oneOf(['Freehold', 'Power_of_attorney', 'leasehold', 'Co_Operative_Society']).default('Freehold'),
  living_room: yup.string(),
  kitchen: yup.string(),
  master_bedroom: yup.string(),
  bathroom: yup.string(),
  balcony: yup.string(),
  other_bedroom: yup.string(),
  preferred_tenants: yup.string(),
  gender_preference: yup.string(),
  maximum_tentants_allowed: yup.string(),
  work_preference: yup.string(),
  food_preference: yup.string(),
  expected_duration_of_stay: yup.string(),
  special_requirement: yup.string(),
  added_by_type: yup.string().oneOf(['Owner', 'Broker', 'Admin']).default('Owner'),
  views: yup.number().default(1),
  admin_status: yup.string().oneOf(['Pending', 'Reject', 'Approved']).default('Pending'),
  is_active: yup.boolean().default(true),
  is_deleted: yup.boolean().default(false),
});

export default validationSchema;
